	Getting started with I2C
Links:
(RUS) http://easyelectronics.ru/interface-bus-iic-i2c.html
(RUS) http://easyelectronics.ru/avr-uchebnyj-kurs-ispolzovanie-avr-twi-dlya-raboty-s-shinoj-iic-i2c.html
(RUS) https://datagor.ru/microcontrollers/microcontrollers-code-library/2912-vizualizaciya-mcu-part-1-oled-128x64-ssd1306.html
(ENG) https://embedds.com/programming-avr-i2c-interface/
(ENG) https://startingelectronics.org/tutorials/arduino/modules/OLED-128x64-I2C-display/


1. Read about the I2C interface
2. See how it's implemented in AVR
3. Study the Datasheet (the TWI peripheral module)
4. Take a look at the initialization code in "i2c.c"
   and map code to information provided in datasheet
5. Using datasheet, reproduce the TWI module FSM logic.
   See how it's handled in the ISR code
6. Make sure you clearly understand the concept of callbacks, i.e.:
   how they are used;
   what are the pros of such appoach;
   what are the alternatives to using callbacks;
   how are they used in "i2c.c"
7. Now read about the OLED display
8. Take a brief look at the "SSD1306.pdf" describing the display controller
   Notice: our display uses the Chinese analog of this controller, with
           limited functionality
9. Study the "i2c_test.c" code. Map commands to what being described in
   the display controller datasheet. Make sure you understand every command,
   how they are passed to the display and how command mode differs from the
   data mode.
   Notice: The "i2c_test.c" is a *simple* test. It's not how we should normally
           work with a display. We will implement a proper library for
           our display soon.


Errata on Chinese display:
- Chinese module has I2C address 0b0111100 (0x3C)
- Display should be turn on with charge pump enabled (commands 0x8D, 0x14, 0xAF)
  These commands should be emitted sequentially
- On Chinese module only the page addressing mode is supported
  It means that the user should flip 0..7 page each time
- Bytes are oriented vertically, i.e.
  bit0.0   ...   bit127.0
  ...            ...
  bit0.7   ...   bit127.7